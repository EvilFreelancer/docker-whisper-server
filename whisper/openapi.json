{
  "openapi": "3.0.0",
  "info": {
    "title": "Whisper.cpp Service",
    "version": "1.6.2",
    "description": "API for Whisper.cpp service."
  },
  "servers": [
    {
      "url": "http://localhost:9000",
      "description": "Local server"
    }
  ],
  "paths": {
    "/transcribe": {
      "post": {
        "summary": "Transcribe audio file",
        "description": "Uploads an audio file and returns the transcription.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "Audio file to be transcribed"
                  },
                  "offset_t": {
                    "type": "integer",
                    "description": "Time offset in milliseconds",
                    "example": 0
                  },
                  "offset_n": {
                    "type": "integer",
                    "description": "Segment index offset",
                    "example": 0
                  },
                  "duration": {
                    "type": "integer",
                    "description": "Duration of audio to process in milliseconds",
                    "example": 0
                  },
                  "max_context": {
                    "type": "integer",
                    "description": "Maximum number of text context tokens to store",
                    "example": -1
                  },
                  "max_len": {
                    "type": "integer",
                    "description": "Maximum segment length in characters",
                    "example": 0
                  },
                  "best_of": {
                    "type": "integer",
                    "description": "Number of best candidates to keep",
                    "example": 2
                  },
                  "beam_size": {
                    "type": "integer",
                    "description": "Beam size for beam search",
                    "example": -1
                  },
                  "audio_ctx": {
                    "type": "integer",
                    "description": "Audio context size (0 - all)",
                    "example": 0
                  },
                  "word_thold": {
                    "type": "number",
                    "description": "Word timestamp probability threshold",
                    "example": 0.01
                  },
                  "entropy_thold": {
                    "type": "number",
                    "description": "Entropy threshold for decoder fail",
                    "example": 2.40
                  },
                  "logprob_thold": {
                    "type": "number",
                    "description": "Log probability threshold for decoder fail",
                    "example": -1.00
                  },
                  "debug_mode": {
                    "type": "boolean",
                    "description": "Enable debug mode",
                    "example": false
                  },
                  "translate": {
                    "type": "boolean",
                    "description": "Translate from source language to English",
                    "example": false
                  },
                  "diarize": {
                    "type": "boolean",
                    "description": "Stereo audio diarization",
                    "example": false
                  },
                  "tinydiarize": {
                    "type": "boolean",
                    "description": "Enable tinydiarize (requires a tdrz model)",
                    "example": false
                  },
                  "split_on_word": {
                    "type": "boolean",
                    "description": "Split on word rather than on token",
                    "example": false
                  },
                  "no_fallback": {
                    "type": "boolean",
                    "description": "Do not use temperature fallback while decoding",
                    "example": false
                  },
                  "print_special": {
                    "type": "boolean",
                    "description": "Print special tokens",
                    "example": false
                  },
                  "print_colors": {
                    "type": "boolean",
                    "description": "Print colors",
                    "example": false
                  },
                  "print_realtime": {
                    "type": "boolean",
                    "description": "Print output in realtime",
                    "example": false
                  },
                  "print_progress": {
                    "type": "boolean",
                    "description": "Print progress",
                    "example": false
                  },
                  "no_timestamps": {
                    "type": "boolean",
                    "description": "Do not print timestamps",
                    "example": false
                  },
                  "language": {
                    "type": "string",
                    "description": "Spoken language ('auto' for auto-detect)",
                    "example": "en"
                  },
                  "detect_language": {
                    "type": "boolean",
                    "description": "Exit after automatically detecting language",
                    "example": false
                  },
                  "prompt": {
                    "type": "string",
                    "description": "Initial prompt",
                    "example": ""
                  },
                  "response_format": {
                    "type": "string",
                    "description": "Format of the response",
                    "enum": [
                      "verbose_json",
                      "json",
                      "text",
                      "srt",
                      "vtt"
                    ],
                    "example": "json"
                  },
                  "temperature": {
                    "type": "number",
                    "description": "Temperature setting for the transcription",
                    "example": 0.0
                  },
                  "temperature_inc": {
                    "type": "number",
                    "description": "Temperature increment for the transcription",
                    "example": 0.2
                  },
                  "use_gpu": {
                    "type": "boolean",
                    "description": "Use GPU for processing",
                    "example": true
                  },
                  "flash_attn": {
                    "type": "boolean",
                    "description": "Use Flash Attention mechanism",
                    "example": false
                  }
                },
                "required": [
                  "file"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful transcription",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transcription": {
                      "type": "string",
                      "description": "Transcribed text"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/load": {
      "post": {
        "summary": "Transcribe audio file",
        "description": "Uploads an audio file and returns the transcription.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "model": {
                    "type": "string",
                    "description": "Load ",
                    "example": "/app/models/ggml-base.en.bin"
                  }
                },
                "required": [
                  "model"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful transcription",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transcription": {
                      "type": "string",
                      "description": "Transcribed text"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message"
          }
        }
      }
    }
  }
}
