ARG UBUNTU_VERSION=24.04
ARG BASE_DEVEL_CONTAINER=ubuntu:${UBUNTU_VERSION}
ARG BASE_RUNTIME_CONTAINER=ubuntu:${UBUNTU_VERSION}

FROM ${BASE_DEVEL_CONTAINER} AS builder
WORKDIR /app

# Install dependencies
RUN set -xe \
 && apt update -q \
 && apt install -fyq bash wget ffmpeg git make cmake vim g++ \
 && apt clean

# Repo with sources
ARG WHISPER_REPO="https://github.com/ggerganov/whisper.cpp.git"

# It may be name of branch, tag or commit hash
ARG WHISPER_VERSION="v1.7.4"

# Clone whisper.cpp repo
RUN set -xe \
 && git clone "$WHISPER_REPO" whisper.cpp
WORKDIR /app/whisper.cpp
RUN set -xe \
 && git checkout "$WHISPER_VERSION" \
 && rm -rf .git

# Build whisper.cpp with MKL support
WORKDIR /app/whisper.cpp
RUN set -xe  \
 && cmake -B build \
 && cmake --build build --config Release -v -j$(nproc)


FROM ${BASE_RUNTIME_CONTAINER} AS runtime
WORKDIR /app

# Install basic dependencies
RUN set -xe \
 && apt update -q \
 && apt install -fyq bash wget ffmpeg \
 && apt clean

# Create folders
RUN set -xe \
 && mkdir -pv /app/models /app/audios

# Copy compiled tools
COPY --from=builder /app/whisper.cpp/models/download-ggml-model.sh .
COPY --from=builder /app/whisper.cpp/build/src/*.so /usr/lib/x86_64-linux-gnu
COPY --from=builder /app/whisper.cpp/build/src/*.so.* /usr/lib/x86_64-linux-gnu
COPY --from=builder /app/whisper.cpp/build/ggml/src/*.so /usr/lib/x86_64-linux-gnu
COPY --from=builder /app/whisper.cpp/build/ggml/src/ggml-sycl/*.so /usr/lib/x86_64-linux-gnu
COPY --from=builder /app/whisper.cpp/build/bin/whisper-bench .
COPY --from=builder /app/whisper.cpp/build/bin/whisper-server .
COPY --from=builder /app/whisper.cpp/build/bin/whisper-cli .
COPY --from=builder /app/whisper.cpp/build/bin/quantize .

# Initialize entrypoint
ADD entrypoint.sh .
RUN chmod +x /app/entrypoint.sh

ENTRYPOINT ["/app/entrypoint.sh"]
